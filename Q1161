/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        int max = Integer.MIN_VALUE, i=1;
        int res=0;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);

        while (!queue.isEmpty()) {
            Queue<TreeNode> temp = new LinkedList<>();
            int sum=0;
            while (!queue.isEmpty()) {
                TreeNode node = queue.poll();
                sum+=node.val;
                if(node.left!=null) temp.offer(node.left);
                if(node.right!=null) temp.offer(node.right);
            }
            if (sum>max) {
                max = sum;
                res = i;
            }
            queue = temp;
            i++;
        }
        return res;
    }
}
